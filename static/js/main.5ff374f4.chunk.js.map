{"version":3,"sources":["assets/images/mypic.png","assets/images/phonebooth.jpg","components/PortfolioMain.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","experience","year","companyName","location","role","PortfolioMain","homeRef","useRef","aboutRef","Fragment","onClick","current","scrollIntoView","behavior","block","inline","ref","className","aria-label","src","profileImage","alt","href","target","rel","map","item","phoneBooth","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,+LCarCC,EAAa,CACjB,CACEC,KAAM,oBACNC,YAAa,YACbC,SAAU,8BACVC,KAAM,sBAER,CACEH,KAAM,oBACNC,YAAa,WACbC,SAAU,yBACVC,KAAM,wBAER,CACEH,KAAM,oBACNC,YAAa,eACbC,SAAU,kBACVC,KAAM,iCAER,CACEH,KAAM,oBACNC,YAAa,8BACbC,SAAU,kBACVC,KAAM,6BAsJKC,EAlJO,WACpB,IAAMC,EAAUC,iBAAO,MACjBC,EAAWD,iBAAO,MAiBxB,OACE,kBAAC,IAAME,SAAP,KACE,6BACE,4BACE,wBAAIC,QApBY,WACtBJ,EAAQK,QAAQC,eAAe,CAC7BC,SAAU,SACVC,MAAO,UACPC,OAAQ,aAgBJ,QACA,oCACA,wBAAIL,QAda,WACvBF,EAASG,QAAQC,eAAe,CAC9BC,SAAU,SACVC,MAAO,UACPC,OAAQ,aAUJ,SACA,yCAGJ,8BACE,yBAAKC,IAAKV,EAASW,UAAU,SAC3B,yBAAKA,UAAU,cACb,4BACE,0BAAMb,KAAK,MAAMc,aAAW,YAA5B,iBAIF,0DACA,uBAAGD,UAAU,gBAAb,+IAMF,yBAAKA,UAAU,WACb,yBAAKE,IAAKC,IAAcC,IAAI,cAGhC,yBAAKJ,UAAU,iBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,SACb,4BACE,0BAAMb,KAAK,MAAMc,aAAW,YAA5B,mCAIF,sCAEF,uBACEI,KAAK,uDACLC,OAAO,SACPC,IAAI,uBAHN,qBASJ,yBAAKP,UAAU,kBAAkBD,IAAKR,GACpC,yBAAKS,UAAU,gBACb,wCACA,uBAAGA,UAAU,kBAAb,4KAIE,6BACA,6BALF,yCAOE,6BACA,6BARF,uIAeF,yBAAKA,UAAU,mBACb,iDACCjB,EAAWyB,KAAI,SAACC,GAAD,OACd,yBAAKT,UAAU,mBACb,wBAAIA,UAAU,cAAcS,EAAKzB,MACjC,yBAAKgB,UAAU,WACb,wBAAIA,UAAU,+BACXS,EAAKxB,aAER,wBAAIe,UAAU,mCACXS,EAAKvB,WAGV,wBAAIc,UAAU,kBAAkBS,EAAKtB,YAK7C,yBAAKa,UAAU,iBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,SACb,4BACE,0BAAMb,KAAK,MAAMc,aAAW,YAA5B,iBAIF,0CAIN,yBAAKD,UAAU,kCACb,yBAAKA,UAAU,4BACb,oIAGuC,IACrC,uBACEK,KAAK,wDACLC,OAAO,SACPC,IAAI,uBAHN,2BAJF,KAaA,uBACEF,KAAK,8DACLL,UAAU,eAFZ,eAOF,yBAAKA,UAAU,eACb,yBAAKE,IAAKQ,IAAYN,IAAI,oBCtKvBO,MARf,WACE,OACE,kBAAC,IAAMnB,SAAP,KACE,kBAAC,EAAD,QCKcoB,QACW,cAA7BC,OAAO3B,SAAS4B,UAEe,UAA7BD,OAAO3B,SAAS4B,UAEhBD,OAAO3B,SAAS4B,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5ff374f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mypic.d8162687.png\";","module.exports = __webpack_public_path__ + \"static/media/phonebooth.41b4603a.jpg\";","import React, { useRef } from \"react\";\n\n// import AboutMe from \"./AboutMe\";\n// import SnakeGame from \"../components/SnakeGame\";\n\nimport \"../assets/css/PortfolioMain.css\";\n\n// import pragyaam from \"../assets/images/pragyaam.png\";\n// import caredata from \"../assets/images/caredata.jpg\";\n// import caredtbackdrop from \"../assets/images/caredtbackdrop.jpg\";\nimport profileImage from \"../assets/images/mypic.png\";\nimport phoneBooth from \"../assets/images/phonebooth.jpg\";\n\nconst experience = [\n  {\n    year: \"Aug 2022-Nov 2022\",\n    companyName: \"Filestage\",\n    location: \"Germany, Stuttgart (Remote)\",\n    role: \"Software Developer\",\n  },\n  {\n    year: \"Jan 2021-Apr 2022\",\n    companyName: \"Tranzact\",\n    location: \"Mumbai, India (Remote)\",\n    role: \"Software Engineer II\",\n  },\n  {\n    year: \"Jul 2019-Dec 2020\",\n    companyName: \"Work On Grid\",\n    location: \"Banglore, India\",\n    role: \"Software Development Engineer\",\n  },\n  {\n    year: \"Apr 2018-Aug 2018\",\n    companyName: \"Caredata Solutions Pvt Ltd.\",\n    location: \"Thrissur, India\",\n    role: \"Junior Software Engineer\",\n  },\n];\n\nconst PortfolioMain = () => {\n  const homeRef = useRef(null);\n  const aboutRef = useRef(null);\n  const handleHomeClick = () => {\n    homeRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"nearest\",\n      inline: \"center\",\n    });\n  };\n\n  const handleAboutClick = () => {\n    aboutRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"nearest\",\n      inline: \"center\",\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <nav>\n        <ul>\n          <li onClick={handleHomeClick}>Home</li>\n          <li>Work</li>\n          <li onClick={handleAboutClick}>About</li>\n          <li>Contact</li>\n        </ul>\n      </nav>\n      <main>\n        <div ref={homeRef} className=\"intro\">\n          <div className=\"intro-text\">\n            <h1>\n              <span role=\"img\" aria-label=\"Hi emoji\">\n                üëã\n              </span>\n            </h1>\n            <h1>Hello, I am Hariprasad K B</h1>\n            <p className=\"profile-desc\">\n              I am an Experienced Software Engineer with a demonstrated history\n              of working in product based startups. Skilled in Full Stack\n              Development.\n            </p>\n          </div>\n          <div className=\"picture\">\n            <img src={profileImage} alt=\"Profile\" />\n          </div>\n        </div>\n        <div className=\"section-about\">\n          <div className=\"about-wrapper\">\n            <div className=\"about\">\n              <h1>\n                <span role=\"img\" aria-label=\"Hi emoji\">\n                  üë®‚Äçüíª\n                </span>\n              </h1>\n              <h3>About</h3>\n            </div>\n            <a\n              href=\"https://www.linkedin.com/in/hariprasad-k-b-58878512b\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              View on Linkdin\n            </a>\n          </div>\n        </div>\n        <div className=\"section-mystory\" ref={aboutRef}>\n          <div className=\"mystory-text\">\n            <h3>My story</h3>\n            <p className=\"body-paragraph\">\n              I have been a leader in the software industry since 2018. During\n              this time, I have had the opportunity to work with some amazing\n              people on several cutting-edge projects.\n              <br />\n              <br />\n              Projects I‚Äôve worked on include .\n              <br />\n              <br />\n              As a tech enthusiast , I strive to have my teams flourish by\n              involving in all the phases of development from design to\n              deployment.\n            </p>\n          </div>\n\n          <div className=\"work-experience\">\n            <h3>Where I've Worked</h3>\n            {experience.map((item) => (\n              <div className=\"company-wrapper\">\n                <h5 className=\"date-range\">{item.year}</h5>\n                <div className=\"company\">\n                  <h5 className=\"company-name body-paragraph\">\n                    {item.companyName}\n                  </h5>\n                  <h5 className=\"company-location body-paragraph\">\n                    {item.location}\n                  </h5>\n                </div>\n                <h5 className=\"body-paragraph\">{item.role}</h5>\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"section-about\">\n          <div className=\"about-wrapper\">\n            <div className=\"about\">\n              <h1>\n                <span role=\"img\" aria-label=\"Hi emoji\">\n                  ü§ô\n                </span>\n              </h1>\n              <h3>Contact</h3>\n            </div>\n          </div>\n        </div>\n        <div className=\"section-contact flex flex-row \">\n          <div className=\"contact flex flex-column\">\n            <p>\n              {/* Are you interested in collaborating or want to connect or chat? */}\n              I'm looking for a job right now , If you are looking to hire me ,\n              hit the contact button down below or{\" \"}\n              <a\n                href=\"https://www.linkedin.com/in/hariprasad-k-b-58878512b/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                contact me via LinkedIn\n              </a>\n              .\n            </p>\n            <a\n              href=\"mailto:hariwin7@gmail.com?subject=Contact%20via%20Portfolio\"\n              className=\"contact-btn\"\n            >\n              Contact Me\n            </a>\n          </div>\n          <div className=\"phone-booth\">\n            <img src={phoneBooth} alt=\"phonebooth\" />\n          </div>\n        </div>\n      </main>\n    </React.Fragment>\n  );\n};\n\nexport default PortfolioMain;\n","import React from \"react\";\n\nimport PortfolioMain from \"./components/PortfolioMain\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <PortfolioMain />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}